!!! 5
html
  head
    title Ogre - ogr2ogr web client
    link(href='http://fonts.googleapis.com/css?family=Ubuntu', rel='stylesheet', type='text/css')
    link(href='http://fonts.googleapis.com/css?family=Rock+Salt', rel='stylesheet', type='text/css')
    link(href="style.css", rel="stylesheet")
    script
      var trackcode = '<%-trackcode%>';
      if(trackcode){
        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', trackcode]);
        _gaq.push(['_trackPageview']);

        (function() {
         var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
         ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
         var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
         })();
      }
  body
    .container
      img.ogre(src="ogre.svg")
      h1: a(href="/") Ogre
      p ogr2ogr web client
      br
      hr
      .row
        .span8
          form(action="/convert", method="post", enctype="multipart/form-data")
            fieldset
              legend Convert to GeoJSON
              .clearfix
                label(for='upload') File*:
                .input
                  input#upload(type="file", name="upload")
                  span.help-block Must be a supported format
              .clearfix
                label(for='callback') JSONP Callback: 
                .input: input#callback(name="callback")
              .clearfix
                label Force Plain Text: 
                .input
                  input(type="checkbox", name="forcePlainText", value="true")
              .clearfix
                .input
                  button.btn.primary(name="convert") Convert
                  | 
                  button.btn.success(name="view") View In Browser

        .span8
          form(action="/convertJson", method="post")
            fieldset
              legend Convert from GeoJSON
              div.clearfix
                label(for='json') GeoJSON:
                div.input: textarea#json.xlarge(name="json", rows=3)
                  | { "type": "FeatureCollection",
                  |   "features": [
                  |     { "type": "Feature",
                  |       "geometry": {"type": "Point", "coordinates": [102.0, 0.5]},
                  |       "properties": {"prop0": "value0"}
                  |       },
                  |     { "type": "Feature",
                  |       "geometry": {
                  |         "type": "LineString",
                  |         "coordinates": [
                  |           [102.0, 0.0], [103.0, 1.0], [104.0, 0.0], [105.0, 1.0]
                  |           ]
                  |         },
                  |       "properties": {
                  |         "prop0": "value0",
                  |         "prop1": 0.0
                  |         }
                  |       },
                  |     { "type": "Feature",
                  |        "geometry": {
                  |          "type": "Polygon",
                  |          "coordinates": [
                  |            [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],
                  |              [100.0, 1.0], [100.0, 0.0] ]
                  |            ]
                  |        },
                  |        "properties": {
                  |          "prop0": "value0",
                  |          "prop1": {"this": "that"}
                  |          }
                  |        }
                  |      ]
                  |    }
              .clearfix
                label(for='name') Output Name:
                .input: input#(name="name")
              .clearfix
                .input
                  button.btn.primary(name="convert") Convert to Shapefile
                  p: small Shapefiles can only support one geometry type
      hr
      != body
